# Wazuh App Copyright (C) 2020 Wazuh Inc. (License GPLv2)
version: '3.8'

services:
  wazuh:
    image: wazuh/wazuh:3.13.2_${VERSION}
    hostname: wazuh-manager
    container_name: wazuh-manager
    restart: always
    environment:
      - TZ=Asia/Bangkok
      - API_USER=t2padmin
      - API_PASS="T2P@dmin!"
      - ELASTICSEARCH_URL=https://es01:9200
    ports:
      - "1514:1514/udp"
      - "1515:1515"
      - "514:514/udp"
      - "514:514"
      - "55000:55000"
    networks:
      - elastic_net
    volumes:
      - /docker/wazuh/wazuh-data/:/var/ossec/data/:Z
    #   - /docker/ssh-keys/:/var/ossec/.ssh/:Z
    #   - /usr/share/xml/scap/ssg/content/:/var/ossec/wodles/oscap/content/:Z
      - ./certs:/etc/filebeat/certs:Z
    #   - ./certs/ca/:/etc/filebeat/certs/ca/:Z
      - ./filebeat/filebeat.yml:/etc/filebeat/filebeat.yml:Z

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
    hostname: es01
    container_name: es01
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - node.master=true
      - ES_VERSION=$VERSION
      - node.data=true
      - node.ingest=true
      - node.ml=true
      - node.name=es01
      - cluster.name=elasticsearch
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - network.host=0.0.0.0
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - path.repo=/mnt/snapshots
      - xpack.ml.enabled=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.monitoring.enabled=true
      - xpack.monitoring.collection.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./elasticsearch/es-data/:/usr/share/elasticsearch/data:Z
      - ./elasticsearch/es-backup:/mnt/snapshots:Z
      - ./elasticsearch/config/entrypoint:/usr/local/bin/entrypoint.sh
      # - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:Z
      - ./certs:$CERTS_DIR:Z
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - elastic_net

  kibana:
    image: wazuh/wazuh-kibana:3.13.2_${VERSION}
    hostname: kibana
    container_name: kibana
    restart: always
    environment:
      - TZ=Asia/Bangkok
      - ENABLED_XPACK=true
      - ELASTICSEARCH_KIBANA_IP=https://es01:9200
      - ELASTICSEARCH_URL=https://es01:9200
      - ELASTICSEARCH_HOSTS=https://es01:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=testenv
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=$CERTS_DIR/ca/ca.crt
      - SERVER_SSL_ENABLED=true
      - SERVER_SSL_KEY=$CERTS_DIR/kibana/kibana.key
      - SERVER_SSL_CERTIFICATE=$CERTS_DIR/kibana/kibana.crt
      - API_USER=t2padmin
      - API_PASS="T2P@dmin!"
      - CERTS_DIR=$CERTS_DIR
      - DEBUG=1
    ports:
      - "5601:5601"
    volumes:
      - ./certs:$CERTS_DIR:Z
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:Z
      - ./kibana/scripts/entrypoint.sh:/entrypoint.sh
      - ./kibana/scripts/kibana_settings.sh:/kibana_settings.sh
    depends_on: ['es01']
    # links:
    #   - es01:es01
    #   - wazuh:wazuh
    networks:
      - elastic_net

  # nginx:
  #   image: wazuh/wazuh-nginx:3.13.2_7.9.1
  #   hostname: nginx
  #   container_name: nginx
  #   restart: always
  #   environment:
  #     - NGINX_PORT=443
  #     - NGINX_CREDENTIALS=kibana:testenv
  #     - TZ=Asia/Bangkok
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/entrypoint.sh:/entrypoint.sh:Z
  #   depends_on:
  #     - kibana
  #   # links:
  #   #   - kibana:kibana
  #   networks:
  #     - elastic_net

networks:
  elastic_net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br_elastic_net